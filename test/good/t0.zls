let hybrid int(v)(x0, xsecond) = x, p where
  rec der x = xprime init x0
  and der xprime = xsecond init 0.0
  and p = period (4.2 | 5.2)

let hybrid int2(x0, xsecond) =
  int(0.0)(x0, xsecond)
    
(*
type cstate =
    { cvec: float array;
      dvec: float array;
      zin: float array;
      zout: bool array;
      mutable cpos : int;
      mutable zpos : int }
      
let int = machine(continuous) (g) { 
  memories
    i_15 : bool = false; cont xprime_13 : float = 0.; cont x_12 : float = 0.
    m : cstate; csize : int; zsize : int;
    
  method reset () =
    i_15 <- true;
    xprime_13.pos <- 0.
    
  method step ((time_14:float), ((x0_10:float), (xsecond_11:float))) =
    (((if i_15 then x_12.pos <- x0_10);
      i_15 <- false;
      xprime_13.der <- xsecond_11;
      x_12.der <- xprime_13.pos;
      g.dvec.(g.cpos) <- xsecond_11;
      g.dvec.(g.cpos + 1) <- xprime_13.pos;
      g.cpos <- g.cpos + 2;
      float)]}

   method csize = 2

   method zsize = 0
       *)
      
