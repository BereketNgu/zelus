%% HeVeA support for runverbatim.
%%
%% Limitations / caveats
%%
%% * runverbatim.hva requires all the intermediate generated by latex and
%%   runverbatim.sh (*.<ext>, *.tex, *.msg, *.err).
%%
%% * The options 'codestyle', 'msgstyle', 'errstyle', 'codelst', 'msglst',
%%   and 'errlst' cannot be set as in LaTeX, e.g.,
%%	\runverbatimsetup{codelst={language=caml}}
%%   Since HeVeA eliminates the grouping braces and passes 'language' to
%%   the handler for 'codelst' (rather than 'language=caml').
%%
%%   One workaround is to \usepackage{hevea} and use \ifhevea to select
%%   the most appropriate of the two forms.
%%
%% * fancyvrb and the package options codestyle, msgstyle, and errstyle are
%%   not supported.
%%   Alternative 1: use the codelst, msglst, and errlst options.
%%   Alternative 2: use css for formatting code, messages, and errors.
%%
%% * Non-empty labels in the arguments of \runverbatimmsg and
%%   \runverbatimerr are not supported.
%%
\ProvidesPackage{runverbatim}
\RequirePackage{keyval}
\RequirePackage{listings}

\newcounter{runverbatim}
\setcounter{runverbatim}{-1}

\newif\ifRVRB@fileexists
\newif\ifRVRB@showcode\RVRB@showcodetrue
\newif\ifRVRB@shouldfail\RVRB@shouldfailfalse
\newif\ifRVRB@withresult\RVRB@withresultfalse
\def\RVRB@pkg@skipopts{}

% % % Declare Options % % %

\DeclareOption{withresult}{\RVRB@withresulttrue}
\DeclareOption{withoutresult}{\RVRB@withresultfalse}
\DeclareOption{skipone}{\def\RVRB@pkg@skipopts{firstline=2}}
\DeclareOption{skiptwo}{\def\RVRB@pkg@skipopts{firstline=3}}

\def\RVRB@codestyle{}
\def\RVRB@msgstyle{}
\def\RVRB@errstyle{}
\define@key{RVRB@pkgkeys}{codestyle}[]{\def\RVRB@codestyle{#1}}
\define@key{RVRB@pkgkeys}{msgstyle}[]{\def\RVRB@msgstyle{#1}}
\define@key{RVRB@pkgkeys}{errstyle}[]{\def\RVRB@errstyle{#1}}

\def\RVRB@codelst{}
\def\RVRB@msglst{}
\def\RVRB@errlst{}
\define@key{RVRB@pkgkeys}{codelst}[]{\def\RVRB@codelst{#1}}
\define@key{RVRB@pkgkeys}{msglst}[]{\def\RVRB@msglst{#1}}
\define@key{RVRB@pkgkeys}{errlst}[]{\def\RVRB@errlst{#1}}

\def\RVRB@subdir{.}
\def\RVRB@prefix{runverbatim}
\def\RVRB@prompt{\#}
\def\RVRB@ext{.ml}
\define@key{RVRB@pkgkeys}{prompt}[]{\def\RVRB@prompt{#1}}
\define@key{RVRB@pkgkeys}{subdir}[]{\def\RVRB@subdir{#1}}
\define@key{RVRB@pkgkeys}{prefix}[]{\def\RVRB@prefix{#1}}
\define@key{RVRB@pkgkeys}{ext}[]{\def\RVRB@ext{#1}}

% Unused options
\define@key{RVRB@pkgkeys}{ignoreerrors}[]{}
\define@key{RVRB@pkgkeys}{compiler}[]{}
\define@key{RVRB@pkgkeys}{compilerflags}[]{}
\define@key{RVRB@pkgkeys}{lastflags}[]{}
\define@key{RVRB@pkgkeys}{includecmd}[]{}

% % % Process Options % % %

% Work around the lack of \DeclareOption* in package.hva
\renewcommand{\@process@option}[1]%
        {\def\pkg@opt{{\@nostyle\@callprim{\@eatspaces}{#1,}}}%
         \ifu\csname\@pkg@opt@name{\pkg@opt}\endcsname
	 \setkeys{RVRB@pkgkeys}{#1}
	 \else
         \csname\@pkg@opt@name{\pkg@opt}\endcsname\fi}%

\ProcessOptions*
\newcommand{\runverbatimsetup}[1]{\ExecuteOptions{#1}}

% % % Macros used in files generated by runverbatim.sh % % %

\newif\ifrunverbatim
\newcommand{\setrunverbatimcmd}[1]{%
    \global\def\runverbatimcmd{\emph{\RVRB@prompt{#1}}}}

\newenvironment{RunVerbatimMsg}{\verblatex}{\endverblatex}
\newenvironment{RunVerbatimErr}{\verblatex}{\endverblatex}

\newcommand{\runverbatimfile}{\RVRB@prefix\RVRB@ext}

% % % Runverbatim user macros % % %

\define@key{RVRB@envkeys}{continue}[]{}
\define@key{RVRB@envkeys}{include}[]{}
\define@key{RVRB@envkeys}{label}[]{}
\define@key{RVRB@envkeys}{showerrors}[]{}
\define@key{RVRB@envkeys}{ignoreerrors}[]{}
\define@key{RVRB@envkeys}{skipnone}[]{\def\RVRB@pkg@skipopts{firstline=1}}
\define@key{RVRB@envkeys}{skipone}[]{\def\RVRB@pkg@skipopts{firstline=2}}
\define@key{RVRB@envkeys}{skiptwo}[]{\def\RVRB@pkg@skipopts{firstline=3}}
\define@key{RVRB@envkeys}{hide}[]{\RVRB@showcodefalse}
\define@key{RVRB@envkeys}{withresult}[]{\RVRB@withresulttrue}
\define@key{RVRB@envkeys}{withoutresult}[]{\RVRB@withresultfalse}
\define@key{RVRB@envkeys}{fail}[]{\RVRB@shouldfailtrue}

% Work around the lack of \edef and \expandafter
\def\RVRB@lstset#1{\lstset{#1}}
\def\elstset#1{\@callprim{\RVRB@lstset}{\{#1\}}}

\newcommand{\runverbatimmsg}{\bgroup%
  \setenvclass{lstlisting}{lstlisting runverbatimmsg}%
  \elstset{\RVRB@msgstyle}%
  \elstset{\RVRB@msglst}%
  \lstinputlisting{\RVRB@subdir/\RVRB@prefix\RVRB@num.msg}%
  \egroup}%

\newcommand{\runverbatimerr}{\bgroup%
  \setenvclass{lstlisting}{lstlisting runverbatimerr}%
  \elstset{\RVRB@errstyle}%
  \elstset{\RVRB@errlst}%
  \lstinputlisting{\RVRB@subdir/\RVRB@prefix\RVRB@num.err}%
  \egroup}%

\newenvironment{runverbatim}[1][]
  {%
    \setenvclass{lstlisting}{lstlisting runverbatim}%
    \stepcounter{runverbatim}%
    \def\@currentlabel{\therunverbatim}%
    \setkeys{RVRB@envkeys}{#1}%
    \global\def\RVRB@num{%
	\ifthenelse{\value{runverbatim}<1000}{0}{}%
        \ifthenelse{\value{runverbatim}<100}{0}{}%
        \ifthenelse{\value{runverbatim}<10}{0}{}%
        \arabic{runverbatim}}%
    \global\def\RVRB@file{\RVRB@subdir/\RVRB@prefix\RVRB@num}%
    \global\let\runverbatimcmd\relax%
    \ifRVRB@showcode%
      \bgroup%
      \elstset{\RVRB@pkg@skipopts}%
      \elstset{\RVRB@codestyle}%
      \elstset{\RVRB@codelst}%
      \lstinputlisting{\RVRB@file\RVRB@ext}%
      \egroup%
      \input{\RVRB@file.tex}%
      \ifrunverbatim%
	\ifRVRB@withresult{\runverbatimmsg{}}\fi%
      \else%
	\ifRVRB@withresult{\runverbatimerr{}}\fi%
      \fi%
    \fi%
    \verblatex%
  }
  {\endverblatex}%
\endinput
