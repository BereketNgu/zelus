open Scope
open Obs

let static tstep = 0.1

node main () =
    let rec t = 0. fby (t +. tstep) in

    let v_true1  = sin(t) +. 2. in
    let v_false1 = sin(t) -. 2. in
    let v_true2  = cos(t) +. 2. in
    let v_false2 = cos(t) -. 2. in

    let x =
             if (t > 7.) then v_false1
        else if (t > 6.) then v_true1
        else if (t > 5.) then v_false1
        else if (t > 4.) then v_true1
        else v_false1
    in
    let y =
             if (t > 7.) then v_true2
        else if (t > 6.) then v_false2
        else if (t > 5.) then v_true2
        else if (t > 4.) then v_false2
        else v_true2
    in

    let r1, s1 =
        d_always_l_or 5.
            (select_apply 0 (d_next 0.3))
            (select_apply 1 (d_always_l 0.3))
            (tstep, [x; y])
    in
    let r2, s2 =
        d_always_l_or 5.
            (select_apply 0 (d_next 0.3))
            (select_apply 1 (d_always_l 5.))
            (tstep, [x; y])
    in
    let r3, s3 =
        d_always_r_or 4.
            (select_apply 0 (d_next 0.3))
            (select_apply 1 (d_always_l 0.3))
            (tstep, [x; y])
    in
    let r4, s4 =
        d_always_r_or 4.
            (select_apply 0 (d_next 0.3))
            (select_apply 1 (d_always_l 5.))
            (tstep, [x; y])
    in
    let st1 = float_of_state s1 in
    let st2 = float_of_state s2 in
    let st3 = float_of_state s3 in
    let st4 = float_of_state s4 in

    let s1 = scope2(-3., 3., ("x", linear, x), ("y", linear, y)) in
    let s2 = scope2(-3., 3.,
        ("alwaysL(5)((next(0.3) x) or (always_l(0.3) y))", linear, r1),
        ("[state: 0 = NotYet 1 = Done]", linear, st1)) in
    let s3 = scope2(-3., 3.,
        ("alwaysL(5)((next(0.3) x) or (always_l(5) y))", linear, r2),
        ("[state: 0 = NotYet 1 = Done]", linear, st2)) in
    let s4 = scope2(-3., 3.,
        ("alwaysR(4)((next(0.3) x) or (always_l(0.3) y))", linear, r3),
        ("[state: 0 = NotYet 1 = Done]", linear, st3)) in
    let s5 = scope2(-3., 3.,
        ("alwaysR(4)((next(0.3) x) or (always_l(5) y))", linear, r4),
        ("[state: 0 = NotYet 1 = Done]", linear, st4)) in
    window5("AlwaysOr", 10., t, s1, s2, s3, s4, s5)
