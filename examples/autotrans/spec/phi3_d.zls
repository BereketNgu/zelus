(* Property taken from
 *
 * Hoxha, B., Abbas, H., and Fainekos, G. E. (2014).
 * Benchmarks for temporal logic requirements for automotive systems.
 * In ARCH@CPSWeek.
 *
 * page 28
*)

let static tstep   = 0.05
let static maxt    = 30.0
let static epsilon = 0.01

open Maneuvers

node maneuver t = hard_braking_d t

(*
    If the car switches from gear 2 to gear 1, then it will never come back
    to gear 2 for 2.5 seconds

    □((g2 ∧ ◇_[0,eps] g1) ⇒ □_[0,2.5] ¬g2)
      \_________________\  -> going from gear 2 to gear 1
  = □(g2 ⇒ (□_[0,eps] ¬g1 ∨ □_[0,2.5] ¬g2))
*)

open Obs
open Spec

node phi3((throttle, brake_torque), (rpm, gear, speed)) =
    let ng1 = p_not (p_eqi 1.) gear in
    let ng2 = p_not (p_eqi 2.) gear in
    let g2 = p_eqi 2. gear in
    d_trigger
        (d_or
            (select_apply 0 (d_always_l epsilon))
            (select_apply 1 (d_always_l     2.5)))
        (tstep, (g2, [ng1; ng2]))

open Scope

node show(t, (throttle, brake_torque), (rpm, gear, speed), (phi_r, phi_s)) =
    let s1 = scope2(0.  , 325. , ("throttle", linear, throttle),
                                   ("brake torque", linear, brake_torque))
    and s2 = scope (0.  , 4.   , ("gear", linear, gear))
    and s3 = scope (0.  , 200. , ("speed", linear, speed))
    and s4 = scope (600., 6000., ("rpm", linear, rpm))
    and s5 = scope2( -1.,    1., ("□((g2 ∧ ◇<sub>[0," ^ (string_of_float epsilon) ^ "]</sub> g1) ⇒ □<sub>[0,2.5]</sub> ¬g2)", linear, phi_r),
                                  ("[state: 0 = NotYet 1 = Done]", linear, phi_s)) in

    window5("Autotrans spec", 50., t, s1, s2, s3, s4, s5)

node cli  () = cli  maneuver phi3 Autotransd.autotrans maxt tstep
node plot () = plot maneuver phi3 Autotransd.autotrans show tstep
