(* Property taken from
 *
 * Hoxha, B., Abbas, H., and Fainekos, G. E. (2014).
 * Benchmarks for temporal logic requirements for automotive systems.
 * In ARCH@CPSWeek.
 *
 * page 28
*)

(* Recommended values:
   max_rpm  : 4500, 5000, 5200, 5500
   max_speed:  120,  160,  170,  200
   t        :    4,    8,   10,   20
*)

let static tstep     = 0.05
let static maxt      = 30.0
let static max_rpm   = 4500.
let static max_speed = 120.
let static t         = 4.

open Obs
open Spec

node maneuver tstep = scenario tstep

(*
    A gear increase from first to fourth in under 10secs, ending in an RPM
    above ω̄ within 2 seconds of that, should result in a vehicle speed
    above v̄.

    (g1 ∧ ◇_[0,10] (edge g4 ∧ ◇_[0,2] (w >= w̄)))) ⇒ □_[0,10] (g4 ∧ (w > w̄) ⇒ (v >= v̄))
  = (¬g1 ∨ (□_[0,10] (¬(edge g4) ∨ □_[0,2] (w < w̄)))) ∨ □_[0,10] (g4 ∧ (w > w̄) ⇒ (v >= v̄)))
  = ¬g1 ∨ (□_[0,10] (edge g4 ⇒ □_[0,2] (w < w̄)) ∨ □_[0,10] (¬g4 ∨ (w <= w̄) ∨ (v >= v̄)))
*)

node phi8((throttle, brake_torque), (rpm, gear, speed)) =
    let g1 = p_eqi (gear, 1.) in
    let g4 = p_eqi (gear, 4.) in
    let disj2 =
        p_or (p_or (p_not g4,
                    p_le (rpm, max_rpm)),
              p_ge (speed, max_speed))
    in
    d_or lift (d_or (d_trigger_l 10. (d_always_l 2.))
                     (d_always_l 10.))
          (tstep, (p_not g1, ((p_edge g4, p_lt (rpm, max_rpm)), disj2)))

open Scope

node show(t, (throttle, brake_torque), (rpm, gear, speed), (phi_r, phi_s)) =
    let s1 = scope2(0.  , 350. , ("throttle", linear, throttle),
                                   ("brake torque", linear, brake_torque))
    and s2 = scope (0.  , 4.   , ("gear", linear, gear))
    and s3 = scope2(0.  , 200. , ("speed", linear, speed),
                                 ("max_speed", linear, max_speed))
    and s4 = scope2(600., 6000., ("rpm", linear, rpm),
                                 ("max_rpm", linear, max_rpm))
    and s5 = scope2( 0.,  4000., ("(g1 ∧ ◇<sub>[0,10]</sub> (g4 ∧ ◇<sub>[0,2]</sub> (rpm ≥ max_rpm))) ⇒ □<sub>[0,10]</sub> (g4 ∧ (rpm ≥ max_rpm) ⇒ (speed ≥ max_speed))", linear, phi_r),
                                  ("[state: 0 = NotYet 1000 = Done]", linear, 1000. *. phi_s)) in

    window5("Autotrans spec", 50., t, s1, s2, s3, s4, s5)

node cli  () = cli  maneuver phi8 Autotransd.autotrans maxt tstep
node plot () = plot maneuver phi8 Autotransd.autotrans show tstep
