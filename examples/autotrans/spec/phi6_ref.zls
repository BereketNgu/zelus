(* Property taken from
 *
 * Hoxha, B., Abbas, H., and Fainekos, G. E. (2014).
 * Benchmarks for temporal logic requirements for automotive systems.
 * In ARCH@CPSWeek.
 *
 * page 28
*)

(* Recommended values:
   max_rpm  : 4500, 5000, 5200, 5500
   max_speed:  120,  160,  170,  200
   t        :    4,    8,   10,   20
*)

let static tstep     = 0.05
let static maxt      = 30.0
let static max_rpm   = 5200.
let static max_speed = 170.
let static cT        = 10.

open Maneuvers

let node maneuver t = passing_maneuver_d tstep

(*
    If engine speed is always less than ω̄, then vehicle speed can not exceed v̄
    in less than T sec.

    ¬(◇_[0,T] (v >= v̄) ∧ □(w < w̄))
*)

open Spec

node gt_f_opt (f, opt) =
    match opt with
    | None -> true
    | Some f' -> f > f'

node phi6(throttle, brake_torque, rpm, gear, speed) =
    let rec t = 0. -> pre t +. tstep in

    let w_phi = max_rpm -. rpm in
    let v_phi = max_speed -. speed in

    let rec alw_v =
        let rec automaton
            | Init ->
                do res = v_phi -> min (pre res) v_phi
                until (t > cT) then Done(res)
            | Done(final) -> do res = final done
        in res
    in

    let first = true fby false in

    automaton
        | Init ->
            do Some w_phi
            unless (first) on (w_phi >= 0.) then Sv
            else   (first) on (w_phi < 0.) then Done(-. w_phi)
        | Sv ->
            do Some alw_v
            unless (w_phi < 0.) then Done(-. w_phi)
        | Done(final) -> do Some final done

open Scope

node show(t, throttle, brake_torque, rpm, gear, speed, prop_state) =
    let s1 = scope2(0.  , 325. , ("throttle", linear, throttle),
                                 ("brake torque", linear, brake_torque))
    and s2 = scope (0.  , 4.   , ("gear", linear, gear))
    and s3 = scope2(0.  , 200. , ("speed", linear, speed),
                                 ("max_speed", linear, max_speed))
    and s4 = scope2(600., 6000., ("rpm", linear, rpm),
                                 ("max_rpm", linear, max_rpm))
    and s5 = scope2(-100., 200., ("(□<sub>[0," ^ (string_of_float cT) ^ "]</sub> (v >= v̄)) ∨ (◇(w >= w̄))", linear, prop_state),
                                 ("zero", linear, 0.)) in

    window5("Autotrans: phi6", 50., t, s1, s2, s3, s4, s5)

let node cli  () = cli  maneuver phi6 maxt tstep
let node plot () = plot maneuver phi6 show tstep
