(* Property taken from
 *
 * Hoxha, B., Abbas, H., and Fainekos, G. E. (2014).
 * Benchmarks for temporal logic requirements for automotive systems.
 * In ARCH@CPSWeek.
 *
 * page 28
*)

let static tstep   = 0.05
let static maxt    = 30.0
let static epsilon = 0.07

open Obs
open Spec

node maneuver tstep = scenario tstep

(*
    For i in [1;4], if the car switches from any gear but i to gear i, it will
    stay in gear i for at least 2.5 seconds

    ∧^4_i=1 □((¬gi ∧ ◇_[0,eps] gi) ⇒ □_[0,2.5] gi)
              \__________________\  -> going from any gear but i to gear i
  = ∧^4_i=1 □(edge gi ⇒ □_[0,2.5] gi)
*)

node stay_in_gear i (tstep, gear) =
    let gi = p_eqi (gear, i) in
    d_trigger (d_always_l 1.0) (tstep, (p_edge gi, gi))

node phi5((throttle, brake_torque), (rpm, gear, speed)) =
    d_and (d_and (d_and (stay_in_gear 1.)
                        (stay_in_gear 2.))
                        (stay_in_gear 3.))
                        (stay_in_gear 4.)
    (tstep, (((gear, gear), gear), gear))

open Scope

node show(t, (throttle, brake_torque), (rpm, gear, speed), (phi_r, phi_s)) =
    let s1 = scope2(0.  , 325. , ("throttle", linear, throttle),
                                   ("brake torque", linear, brake_torque))
    and s2 = scope (0.  , 4.   , ("gear", linear, gear))
    and s3 = scope (0.  , 200. , ("speed", linear, speed))
    and s4 = scope (600., 6000., ("rpm", linear, rpm))
    and s5 = scope2( -3.,    2., ("⋀<sup>4</sup><sub>i=1</sub> □(edge gi ⇒ □<sub>[0,2.5]</sub> gi)", linear, phi_r),
                                  ("[state: 0 = NotYet 1 = Done]", linear, phi_s)) in

    window5("Autotrans spec", 50., t, s1, s2, s3, s4, s5)

node cli  () = cli  maneuver phi5 Autotransd.autotrans maxt tstep
node plot () = plot maneuver phi5 Autotransd.autotrans show tstep
