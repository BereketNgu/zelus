(**************************************************************************)
(*                                                                        *)
(*                                Zelus                                   *)
(*               A synchronous language for hybrid systems                *)
(*                       http://zelus.di.ens.fr                           *)
(*                                                                        *)
(*                    Marc Pouzet and Timothy Bourke                      *)
(*                                                                        *)
(*  Copyright 2012 - 2019. All rights reserved.                           *)
(*                                                                        *)
(*  This file is distributed under the terms of the CeCILL-C licence      *)
(*                                                                        *)
(*  Zelus is developed in the INRIA PARKAS team.                          *)
(*                                                                        *)
(**************************************************************************)

type 'a return =
   | Success (* the integration has succeed; no step *)
   | RootsFound (* a root has been found *)
   | Horizon (* the integration has succeed; an horizon is reached *)
   | Cascade of 'a (* a cascade *)
   | StopTimeReached (* the end of simulation time is reached *)
   | Error (* something went wrong during integration *)

val solve :
  ('a -C-> 'b) -S-> float -S-> 'a -S-> float * 'a -D-> float * 'b return
